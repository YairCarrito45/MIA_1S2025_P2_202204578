{"ast":null,"code":"var _jsxFileName = \"/home/yair/Escritorio/proyecto1 archivos/MIA_1S2025_P1_202204578/front/src/App.js\",\n  _s = $RefreshSig$();\n// Importación de React y hooks necesarios\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// Monaco Editor: componente para crear el editor de texto estilo VSCode\nimport Editor from \"@monaco-editor/react\";\n\n// Estilos de la app\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estado para almacenar los comandos ingresados en el editor\n  const [commandInput, setCommandInput] = useState(\"\");\n\n  // Estado para mostrar la salida de la ejecución\n  const [output, setOutput] = useState(\"\");\n\n  // Referencia al textarea para auto-resize\n  const textareaRef = useRef(null);\n\n  // Auto-resize del textarea de salida cada vez que cambia el output\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = \"auto\";\n      textarea.style.height = `${textarea.scrollHeight}px`;\n    }\n  }, [output]);\n\n  // ----------------------------------------------\n  // FUNCIÓN: Cargar archivo .smia desde el sistema\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    if (file && file.name.endsWith(\"..mia\")) {\n      const reader = new FileReader();\n      reader.onload = event => {\n        setCommandInput(event.target.result);\n      };\n      reader.readAsText(file);\n    } else {\n      alert(\"Por favor selecciona un archivo .smia válido\");\n    }\n  };\n\n  // -----------------------------------------------------\n  // FUNCIÓN: Ejecutar comandos enviándolos al backend\n  const handleExecute = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/execute\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          command: commandInput\n        })\n      });\n      const result = await response.json();\n      setOutput(result.output);\n    } catch (error) {\n      setOutput(\"Error al comunicarse con el backend.\");\n    }\n  };\n\n  // ----------------------------------------\n  // FUNCIÓN: Limpiar la entrada y la salida\n  const handleClear = () => {\n    setCommandInput(\"\");\n    setOutput(\"\");\n  };\n\n  // ---------------------\n  // RENDERIZADO PRINCIPAL\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sistema de Archivos EXT2 - Proyecto MIA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".smia\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleExecute,\n        children: \"Ejecutar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClear,\n        children: \"Limpiar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Entrada:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Editor, {\n          height: \"560px\",\n          language: \"plaintext\",\n          theme: \"hc-black\",\n          value: commandInput,\n          onChange: value => setCommandInput(value),\n          options: {\n            minimap: {\n              enabled: false\n            },\n            fontSize: 14,\n            lineNumbers: \"on\",\n            scrollBeyondLastLine: false,\n            wordWrap: \"on\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Salida:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          className: \"salida\",\n          value: output,\n          readOnly: true,\n          placeholder: \"#------Estiben Yair Lopez Leveron------ 202204578----\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1NUVWLAtI6yWxm4kK05O/RO+4JA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Editor","jsxDEV","_jsxDEV","App","_s","commandInput","setCommandInput","output","setOutput","textareaRef","textarea","current","style","height","scrollHeight","handleFileUpload","e","file","target","files","name","endsWith","reader","FileReader","onload","event","result","readAsText","alert","handleExecute","response","fetch","method","headers","body","JSON","stringify","command","json","error","handleClear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","onClick","language","theme","value","options","minimap","enabled","fontSize","lineNumbers","scrollBeyondLastLine","wordWrap","ref","readOnly","placeholder","_c","$RefreshReg$"],"sources":["/home/yair/Escritorio/proyecto1 archivos/MIA_1S2025_P1_202204578/front/src/App.js"],"sourcesContent":["// Importación de React y hooks necesarios\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// Monaco Editor: componente para crear el editor de texto estilo VSCode\nimport Editor from \"@monaco-editor/react\";\n\n// Estilos de la app\nimport \"./App.css\";\n\nfunction App() {\n  // Estado para almacenar los comandos ingresados en el editor\n  const [commandInput, setCommandInput] = useState(\"\");\n\n  // Estado para mostrar la salida de la ejecución\n  const [output, setOutput] = useState(\"\");\n\n  // Referencia al textarea para auto-resize\n  const textareaRef = useRef(null);\n\n  // Auto-resize del textarea de salida cada vez que cambia el output\n  useEffect(() => {\n    const textarea = textareaRef.current;\n    if (textarea) {\n      textarea.style.height = \"auto\";\n      textarea.style.height = `${textarea.scrollHeight}px`;\n    }\n  }, [output]);\n\n  // ----------------------------------------------\n  // FUNCIÓN: Cargar archivo .smia desde el sistema\n  const handleFileUpload = (e) => {\n    const file = e.target.files[0];\n    if (file && file.name.endsWith(\"..mia\")) {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        setCommandInput(event.target.result);\n      };\n      reader.readAsText(file);\n    } else {\n      alert(\"Por favor selecciona un archivo .smia válido\");\n    }\n  };\n\n  // -----------------------------------------------------\n  // FUNCIÓN: Ejecutar comandos enviándolos al backend\n  const handleExecute = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/execute\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ command: commandInput }),\n      });\n\n      const result = await response.json();\n      setOutput(result.output);\n    } catch (error) {\n      setOutput(\"Error al comunicarse con el backend.\");\n    }\n  };\n\n  // ----------------------------------------\n  // FUNCIÓN: Limpiar la entrada y la salida\n  const handleClear = () => {\n    setCommandInput(\"\");\n    setOutput(\"\");\n  };\n\n  // ---------------------\n  // RENDERIZADO PRINCIPAL\n  return (\n    <div className=\"App\">\n      {/* Encabezado del proyecto */}\n      <header className=\"App-header\">\n        <h1>Sistema de Archivos EXT2 - Proyecto MIA</h1>\n      </header>\n\n      {/* Botones de control */}\n      <div className=\"controls\">\n        <input type=\"file\" accept=\".smia\" onChange={handleFileUpload} />\n        <button onClick={handleExecute}>Ejecutar</button>\n        <button onClick={handleClear}>Limpiar</button>\n      </div>\n\n      {/* Área dividida: Entrada y Salida */}\n      <div className=\"editor-container\">\n        {/* Entrada de comandos con editor */}\n        <div className=\"editor\">\n          <label>Entrada:</label>\n          <Editor\n            height=\"560px\"\n            language=\"plaintext\"\n            theme=\"hc-black\"\n            value={commandInput}\n            onChange={(value) => setCommandInput(value)}\n            options={{\n              minimap: { enabled: false },\n              fontSize: 14,\n              lineNumbers: \"on\",\n              scrollBeyondLastLine: false,\n              wordWrap: \"on\",\n            }}\n          />\n        </div>\n\n        {/* Salida de los comandos ejecutados */}\n        <div className=\"editor\">\n          <label>Salida:</label>\n          <textarea\n            ref={textareaRef}\n            className=\"salida\"\n            value={output}\n            readOnly\n            placeholder=\"#------Estiben Yair Lopez Leveron------ 202204578----\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}